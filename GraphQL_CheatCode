Ok Ok we will see what cheat we will use here

first install graphql express-graphql

then
const expressGraphQL  = require('express-graphql');
app.use('/graphql',expressGraphQL({
    schema: schema,    -> extrenal schema file we will create
    graphiql: true
}));

when we navigate /graphql on our server , graphql will give default IDE to test things out. thats why we specify graphql: true in above line

Now create one schema file where we will specify all queries and mutations

const { 
    GraphQLObjectType,
    GraphQLString,
    GraphQLInt,
    GraphQLSchema,
    GraphQLList,
    GraphQLNonNull
} = require('graphql');

we need these going forward because we say type checks to our fileds these are graphql based type checks

Firsts things fisrt, create one schema, specifying that obj is graphqlobjecttype

const CustomerType = new GraphQLObjectType({
    name: 'Customer',
    fields: () => ({
        id: {type:GraphQLString},
        name: {type:GraphQLString},
        email: {type:GraphQLString},
        age: {type:GraphQLInt}
    })
});

**** name should be there ******


Done, now will write some queries -> these are nothung but fetching our data from backend

const RootQuery = new GraphQLObjectType({
    name: 'RootQueryType',
    fields: {
        customer:{
            type: CustomerType,
            args: {
                id:{type:GraphQLString}
            },
            resolve(parentValue,args){
                return axios.get('http://localhost:3000/customers/'+ args.id)
                    .then(res => res.data)
            }
        },
        customers: {
            type: new GraphQLList(CustomerType),
            resolve(parentValue,args){
                return axios.get('http://localhost:3000/customers')
                .then(res => res.data)
            }
        }
    }
})


***** we specifyingit as root query for all our queries which will sit inside this *****************
Every query has name,fileds,resolve these are important.


******************* Mutation ********************
Adding some data to database
// Mutations

const mutation = new GraphQLObjectType({
    name: 'Mutation',
    fields: {
        addCustomer:{
            type:CustomerType,
            args:{
                name: {type:new GraphQLNonNull(GraphQLString)},
                email: {type:new GraphQLNonNull(GraphQLString)},
                age: {type:new GraphQLNonNull(GraphQLInt)}
            },
            resolve(parentValue,args){
                return axios.post('http://localhost:3000/customers',{
                    name: args.name,
                    email: args.email,
                    age: args.age
                })
                .then(res => res.data)
            }
        },
}

this also same as our query type


******************* important *******************
module.exports = new GraphQLSchema({
    query: RootQuery,
    mutation
})

Above step should be mandatory to export our things







query{
  customer(id:"1"){
    name,
    email,
    age
  }
}


mutation {
  editCustomer(id:"2",name:"reddy",email:"g@gmail.com",age:21){
    name,
    age,
    email
  }
}
